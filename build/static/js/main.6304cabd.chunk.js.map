{"version":3,"sources":["Components/MessageField.tsx","Components/ChatFeed.tsx","Components/SendButton.tsx","socket.js","Components/Input.tsx","Components/CloseButton.tsx","Components/AgentInfo.tsx","Components/ChatStatus.tsx","Components/TypingIndicator.tsx","Components/Indicator.tsx","Components/Box.tsx","Components/useLocalStorage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","customer","display","flexDirection","alignSelf","minWidth","width","maxHeight","padding","margin","wordBreak","borderTopLeftRadius","borderBottomRightRadius","color","backgroundColor","animation","transform","operator","message","fontSize","time","marginTop","MessageField","msg","sendBy","classes","className","root","paddingTop","height","overflowY","msOverflowStyle","scrollbarWidth","ChatFeed","messages","id","divRef","useRef","useEffect","current","scrollTo","scrollHeight","ref","map","index","position","bottom","right","btn","zIndex","SendButton","IconButton","type","size","socket","io","window","origin","stoppedTyping","alignItems","borderRadius","overflow","input","InputText","sendMessage","setMessageText","showTyping","typing","on","data","state","onKeyDown","e","keyCode","handleKeyDown","onSubmit","TextField","value","onChange","onInput","emit","onKeyUp","clearTimeout","setTimeout","autoComplete","multiline","autoFocus","InputProps","disableUnderline","CloseButton","paddingLeft","fontWeight","agentAvailable","transition","agentUnavailable","AgentInfo","agentName","setAgentName","name","borderTopRightRadius","ChatStatus","countContext","useContext","CountContext","onClick","showDispatch","memo","fontStyle","TypingIndicator","justifyContent","textAlign","Indicator","opacity","icon","bubble","Box","showState","Input","useLocalStorage","key","initialValue","useState","item","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","React","createContext","reducer","action","app","backgroundImage","backgroundRepeat","backgroundPosition","App","useReducer","show","displayBox","setMessage","setID","addMessages","saveToLocalStrg","uuidv4","oldMsgs","Provider","preventDefault","msgTime","Date","toRoom","toLocaleTimeString","hour","minute","hour12","target","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6304cabd.chunk.js","sourcesContent":["import React from 'react'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n        customer: {\r\n          \r\n            display:'flex',\r\n            flexDirection:'column',\r\n            alignSelf:'flex-start',\r\n            minWidth: '3.5rem',\r\n            width:'fit-content',\r\n            maxHeight: 'max-content',\r\n            padding:'0.5rem 0.5rem 0.25rem 0.5rem',\r\n            margin:'0.6rem 0.6rem 0rem 0.6rem',\r\n            wordBreak:'break-word',\r\n            borderTopLeftRadius:'0.6rem',\r\n            borderBottomRightRadius:'0.6rem',\r\n            color:'white',\r\n            backgroundColor:'#276678',\r\n            animation:'$fadeIn .25s ease-in-out',\r\n            },\r\n            '@keyframes fadeIn': { \r\n          \r\n              '0%':{\r\n                transform:'translateY(10px)'\r\n              },\r\n              '50%':{\r\n                transform:'translateY(-10px)'\r\n              },\r\n              '100%' : {\r\n                transform:'translateY(0px)'\r\n              }\r\n              \r\n              } ,\r\n          operator: {\r\n           display:'flex',\r\n            flexDirection:'column',\r\n            alignSelf:'flex-end',\r\n            minWidth: '3.5rem',\r\n            width:'fit-content',\r\n            maxHeight: 'max-content',\r\n            padding:'0.5rem 0.5rem 0.25rem 0.5rem',\r\n            margin:'0.6rem 0.6rem 0rem 0.6rem',\r\n            wordBreak:'break-word',\r\n            borderTopLeftRadius:'0.6rem',\r\n            borderBottomRightRadius:'0.6rem',\r\n            backgroundColor:'#f6f5f5',\r\n            animation:'$fadeIn .25s ease-in-out',\r\n      \r\n          },\r\n          message : {\r\n            alignSelf:'flex-start',\r\n            fontSize:'0.85rem',\r\n          },\r\n          time : {\r\n            alignSelf:'flex-end',\r\n            fontSize:'0.6rem',\r\n            marginTop:'0.4rem',\r\n            padding:0,\r\n            \r\n          }\r\n    \r\n})\r\n const MessageField : React.FC<{msg:any, sendBy:string}> = ({msg, sendBy}) => {\r\n\r\n  const classes = useStyles()\r\n\r\n    return (\r\n        <div className = {sendBy === 'customer' ?  classes.customer : classes.operator} >\r\n        <div className = {classes.message}>{ msg.message }</div> \r\n        <div className = {classes.time}>{msg.time}</div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageField\r\n","import React, {useEffect, useRef } from 'react'\r\nimport MessageField from './MessageField'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      display:'flex',\r\n      flexDirection:'column',\r\n      paddingTop:'0.5rem',\r\n      width:'100%',\r\n      height:'70%',\r\n      overflowY:'auto',\r\n      msOverflowStyle:'none',\r\n      scrollbarWidth: 'none',\r\n      '&::-webkit-scrollbar' : {\r\n        display:'none'\r\n      }\r\n    }\r\n   \r\n})\r\n const ChatFeed : React.FC<{messages:Object[], id:string}> = ({messages, id}) => {\r\n    \r\n  const classes = useStyles();\r\n  const divRef = useRef<any>()\r\n     \r\n  useEffect(() => {\r\n  divRef.current.scrollTo(0, divRef.current.scrollHeight)    \r\n  }, [messages])\r\n  \r\n\r\n  return (\r\n        <div ref = {divRef} className = {classes.root}>\r\n          { messages.map((msg:any, index:number) =>     \r\n            msg.id !== 'agent' \r\n            ? <MessageField key = {index} msg = {msg} sendBy = {'customer'} />\r\n            : <MessageField key = {index} msg = {msg} sendBy = {'agent'} />\r\n            ) }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatFeed","import React  from 'react'\r\nimport {IconButton} from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n    position:'absolute',\r\n    width:'10%',\r\n    bottom:15,\r\n    margin:'0.4rem 0.4rem',\r\n    right:10,\r\n    },\r\n    btn : {\r\n        zIndex:1,\r\n    }\r\n})\r\n\r\n const SendButton : React.FC = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n        <IconButton \r\n        className = {classes.btn} type=\"submit\"\r\n        size = 'small'\r\n        >\r\n        <SendIcon  />\r\n        </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SendButton","import io from \"socket.io-client\";\r\n\r\n\r\nexport  const socket = io(window.origin);","import React, {  useEffect} from 'react'\r\nimport SendButton from './SendButton'\r\nimport { TextField } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport  { socket } from '../socket'\r\n\r\n\r\nlet stoppedTyping:any = null\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display:'flex',\r\n        alignItems:'center',\r\n        width:'95%',\r\n        height:'10%',\r\n        backgroundColor:'#f6f5f5',\r\n        borderRadius:'0.5rem',\r\n        overflow:'auto',\r\n        msOverflowStyle:'none',\r\n        scrollbarWidth: 'none',\r\n        '&::-webkit-scrollbar' : {\r\n            display:'none'\r\n      }\r\n    },\r\n    input :{\r\n    width:'80%',\r\n    height: '50%',\r\n    padding:'10px',\r\n    fontSize:'16px'\r\n    }\r\n})\r\n    \r\n  \r\n    const InputText : React.FC<{id:string, message:Object, sendMessage:(e:any) => void, setMessageText:(e:any) => void, showTyping:(value:any) => any, typing:boolean }> = ({id , message, sendMessage, setMessageText, showTyping, typing }) => {\r\n    \r\n    const classes = useStyles()\r\n\r\n   \r\n    useEffect(() => {\r\n    {/* Socket on typing event event receive messages from*/}  \r\n    socket.on('typing', function(data:any) {\r\n    showTyping(data.state)\r\n    });\r\n    }, [showTyping])\r\n    \r\n    const typingEvent = () => {\r\n    {/*Emit typing socket event on input to display typing indicator*/}  \r\n    socket.emit('typing', {state: true, id:id} )\r\n    }\r\n\r\n    const  stopTyping = () => {\r\n       window.clearTimeout(stoppedTyping)\r\n       stoppedTyping =  window.setTimeout(() => {\r\n    {/*Emit typing socket event on keyup to hide typing indicator*/}  \r\n        socket.emit('typing', {state:false, id:id})\r\n        }, 1500);    \r\n    }\r\n\r\n    const handleKeyDown = (e:any) => {\r\n        if(e.keyCode === 13) {\r\n            sendMessage(e)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onKeyDown = {e => handleKeyDown(e)} onSubmit={sendMessage} className = {classes.root} >\r\n        <TextField\r\n        className = {classes.input} \r\n        value={message} \r\n        onChange={setMessageText} \r\n        onInput = {typingEvent}\r\n        onKeyUp = {stopTyping}\r\n        autoComplete = 'true'\r\n        multiline = {true}\r\n        autoFocus = {true}\r\n        InputProps = {{ disableUnderline:true }}\r\n        >\r\n        </TextField>\r\n        <SendButton />\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default InputText;","import React from 'react'\r\nimport {IconButton} from '@material-ui/core';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n    position:'absolute',\r\n    right:20\r\n    }\r\n})\r\n const CloseButton : React.FC = () => {\r\n\r\n  const classes = useStyles()\r\n \r\n\r\n    return (\r\n        <div className = {classes.root} >\r\n        <IconButton  \r\n        size = 'small' \r\n        >\r\n        <KeyboardArrowDownIcon /> \r\n        </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CloseButton;\r\n","import React, { useEffect }  from 'react'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { socket } from '../socket'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n    display:'flex',\r\n    alignItems:'center',\r\n    paddingLeft:30,\r\n    fontWeight:500,\r\n    width:\"70%\",\r\n    },\r\n    agentAvailable : {\r\n        width:'0.7em',\r\n        height:'0.7em',\r\n        borderRadius:'50%',\r\n        backgroundColor:'#00FF00',\r\n        margin:'0 .3em 0 -0.5em',\r\n        transition:'0.1s ease-in-out 0.1s'\r\n        },\r\n    agentUnavailable : {\r\n        width:'0.7em',\r\n        height:'0.7em',\r\n        borderRadius:'50%',\r\n        backgroundColor:'red',\r\n        margin:'0 .3em 0 -0.5em',\r\n        transition:'0.1s ease-in-out 0.1s'\r\n\r\n        }\r\n})\r\n\r\n const AgentInfo: React.FC<{agentName:string, setAgentName:(value:any) => any}> = ({agentName, setAgentName}) => {\r\n   \r\n    \r\n    const classes = useStyles()\r\n\r\n    useEffect(() => {\r\n      {/* Socket on agent available event receive agent status*/}  \r\n    socket.on('agent available', (data:any) => {\r\n    setAgentName(data.name)\r\n    })\r\n    })\r\n  \r\n\r\n    return (\r\n        <div className = {classes.root}>\r\n        <span className = {agentName !== 'Agent name' ?  classes.agentAvailable : classes.agentUnavailable}></span>\r\n        <span>{agentName}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AgentInfo","import React, { useContext, memo } from 'react'\r\nimport CloseButton from './CloseButton'\r\nimport AgentInfo from './AgentInfo'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { CountContext } from '../App'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display:'flex',\r\n        alignItems:'center',\r\n        width:'100%', \r\n        height:'10%',\r\n        borderTopLeftRadius:'0.5rem',\r\n        borderTopRightRadius:'0.5rem',\r\n        backgroundColor:'#1687a7',\r\n        color:'white',\r\n           \r\n    },\r\n    \r\n})\r\n const ChatStatus: React.FC<{agentName:string, setAgentName:(value:any) => any }> = ({agentName, setAgentName}) => {\r\n\r\n    const classes = useStyles()\r\n    const countContext:any = useContext(CountContext)\r\n\r\n    return (\r\n        <div className = {classes.root} onClick = {() => countContext.showDispatch('show') }>\r\n        <AgentInfo\r\n        agentName = {agentName}\r\n        setAgentName = {setAgentName} \r\n        /> \r\n        <CloseButton />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(ChatStatus);","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    root :  {\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        height: '1rem'    \r\n    },\r\n    type : {\r\n      fontSize:'0.8rem',\r\n      fontStyle:'oblique'    \r\n    }  \r\n})\r\n\r\n    const TypingIndicator : React.FC = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n          <span className = {classes.type}>\r\n          ...typing\r\n          </span>\r\n        </div>\r\n      \r\n    )\r\n}\r\n\r\n\r\nexport default TypingIndicator;","import React, {memo} from 'react'\r\nimport TypingIndicator from './TypingIndicator'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n    display:'flex',\r\n    alignItems:'center',\r\n    justifyContent:'center',\r\n    width:'100%',\r\n    height:'5%',\r\n    textAlign:'center',\r\n    }\r\n})\r\n const Indicator : React.FC<{typing:boolean}> = ({ typing }) => {\r\n\r\n  const classes = useStyles()\r\n\r\n    return (\r\n        <div className = {classes.root} >\r\n        {typing ?  <TypingIndicator /> : null }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(Indicator)\r\n","import React, { useContext} from 'react'\r\nimport TextField from './ChatFeed'\r\nimport Input from './Input'\r\nimport ChatStatus from './ChatStatus';\r\nimport Indicator from './Indicator'\r\nimport { makeStyles } from '@material-ui/core';\r\nimport TextsmsIcon from '@material-ui/icons/Textsms';\r\nimport {IconButton} from '@material-ui/core';\r\nimport { CountContext } from '../App'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n    display:'flex',\r\n    flexDirection:'column',\r\n    alignItems:'center',\r\n    width:'270px',\r\n    height: '450px',\r\n    backgroundColor:'#d3e0ea',\r\n    position:'absolute',\r\n    bottom:30,\r\n    right:50,\r\n    borderRadius:'1em',\r\n    animation:'$fadeIn 0.2s ease-out',\r\n    },\r\n    '@keyframes fadeIn': { \r\n    \r\n        '0%':{\r\n          opacity:'0'\r\n        },\r\n        '50%':{\r\n          opacity:'0.5'\r\n        },\r\n        '100%' : {\r\n          opacity:'1'\r\n        }\r\n        } ,\r\n\r\n    icon : {\r\n        position:'absolute',\r\n        bottom:30,\r\n        right:50\r\n    },\r\n\r\n    bubble : {\r\n        width:'60px',\r\n        height:'60px'\r\n    }\r\n    \r\n})\r\n\r\n    const Box : React.FC<{messages:Object[], id:string, message:string, sendMessage:(e:any) => void, setMessageText:(e:any) => void, showTyping:(value:any) => any, typing:boolean, agentName:string, setAgentName:(value:any) => any }> = ({messages, message, id, showTyping, typing, sendMessage, setMessageText, agentName, setAgentName }) => {\r\n\r\n    const classes = useStyles()\r\n   \r\n    const countContext:any = useContext(CountContext)\r\n   \r\n\r\n    if(countContext.showState) {\r\n    return ( \r\n       \r\n        <div className = {classes.root} >\r\n        <ChatStatus  \r\n        agentName = {agentName}\r\n        setAgentName = {setAgentName} />\r\n        <TextField messages = {messages} id = {id} />\r\n        <Indicator typing = {typing} />\r\n        <Input id = {id} message = {message}  setMessageText = {setMessageText} sendMessage = {sendMessage}  showTyping = {showTyping} typing = {typing} />\r\n        </div>  \r\n    ) \r\n    }\r\n\r\n    else {\r\n        return (\r\n            <div>\r\n            <IconButton\r\n            onClick = {()=> {countContext.showDispatch('show')}}\r\n            className = {classes.icon}\r\n            >\r\n            <TextsmsIcon \r\n            className = {classes.bubble}\r\n            color = 'primary'\r\n            />\r\n            </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Box;","import  { useState } from 'react';\r\n\r\nfunction useLocalStorage(key:any, initialValue:any) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n  \r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = (value:any) => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n  \r\n    return [storedValue, setValue];\r\n  } \r\n\r\n  export default useLocalStorage;","import React , { useState,useReducer, useEffect } from 'react';\nimport Box from './Components/Box'\nimport  useLocalStorage  from './Components/useLocalStorage'\nimport { makeStyles } from '@material-ui/core';\nimport  { socket } from './socket'\nimport { v4 as uuidv4 } from 'uuid';\n\n\n\nexport const CountContext = React.createContext({})\n\n\nconst initialState = false\n\nconst reducer = (state:any, action:any) => {\n    switch(action) {\n        case 'show':\n            return !state\n        default:\n            return state\n    }\n}\n\nconst useStyles = makeStyles({\n  app: {\n    width: '100%',\n    height: '100%',\n    position:'relative',\n    backgroundImage: `URL('customer_support.jpg')`,\n    backgroundRepeat:'no-repeat',\n    backgroundPosition:'left',\n  }\n})\n\n\n\nconst App : React.FC = () => {\n\n  \n  const [show, displayBox] = useReducer(reducer, initialState)\n  const [message, setMessage] = useState('')\n  const [id, setID] = useState('')\n  const [typing, showTyping] = useState(false)\n  const [messages, addMessages] = useState<Object[]>([])\n  const [storage, saveToLocalStrg] = useLocalStorage('messages', '');\n  const [agentName, setAgentName] = useState('Agent name')\n  const classes = useStyles()\n\n\n  const sendMessage = (e:any) => {\n      e.preventDefault(); \n      let msgTime = new Date()\n      if (message) {\n        let data = {message:message, id:id, toRoom:id, time:msgTime.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit', hour12:false})}\n          \n          {/*Emit chat message socket event on form submit to send messages*/}  \n          socket.emit('chat message', data);   \n          setMessage('');\n        } \n      }\n  \n    const setMessageText = (e:any) => {\n      setMessage(e.target.value)\n  }\n\n  useEffect(() => {\n  {/* On document load emit join socket event to join room*/}  \n  socket.emit('join', id)\n  }, [id])\n\n\n  useEffect(() => {\n    setID(uuidv4());\n\n     {/* Socket on chat message event receive messages from server*/}  \n    \n     socket.on('chat message', function(msg:Object) {\n        addMessages((oldMsgs) => [...(oldMsgs), msg]);\n    }); \n    }, [])\n\n    useEffect(() => {  \n    let data =  JSON.parse(localStorage.getItem('messages') || '[]')\n    data ? addMessages([...data]) : saveToLocalStrg(messages)  \n    }, [])\n\n    useEffect(() => {\n     saveToLocalStrg(messages)\n    }, [messages])\n\n    useEffect(() => {\n    setTimeout(() => {\n      displayBox('show')\n    }, 1000);\n    }, [])\n\n  return (\n    <CountContext.Provider value = {{ showState:show, showDispatch:displayBox}}>\n    <div className= {classes.app}>\n     <Box  \n     sendMessage = {sendMessage} \n     id = {id} showTyping = { showTyping } \n     setMessageText = {setMessageText}  \n     typing = { typing } \n     messages = { messages } \n     message = { message } \n     agentName = {agentName}\n     setAgentName = {setAgentName}\n     />\n    </div>\n    </CountContext.Provider>\n  );\n}\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}